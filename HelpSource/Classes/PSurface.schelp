TITLE:: PSurface
summary:: Represents a surface in 3D space
categories:: ImmLib
related:: Classes/PField,  Classes/ImmDef, Classes/PSphere, Classes/PGeodesicSphere, Classes/PPlane, Classes/SurfaceDef

DESCRIPTION::
	An ImmLib Surface.

	A PSurface represents a surface in 3D space on which a speaker system can place virtual sources.

	Given a speaker system with speaker locations x^i we assume that there is some surface S which contains all the points. We assume also that S has a parametrization, that is, that there exists a function p(u, v) with (u, v) on some domain D such that p(D) = S.

	The coordinates u, v are called local coordinates. This allows us to locate any point
on the surface using only two coordinates, since for any point x in S there exists (u, v)
such that p(u, v) = x. In a intuitive sense this surface should be the one that is more
similar to the shape suggested by the speaker locations although it doesn’t have to be
exactly the same, so if the speakers are arranged in a dome we can consider S to be
the half-sphere { (x, y, z) : x2 + y 2 + z 2 = 1 ∧ z >= 0 }.

This an abstract class.

CLASSMETHODS::

PRIVATE:: counter, default, incrementCounter, prToSphericalRange, new

INSTANCEMETHODS::

PRIVATE::pointsWrapped, distFunc, points, rangeU, rangeV, toFunc, fromFunc, isClosed, maxDist, pointsRV3D, manifold, num, storeModifiersOn, ubuses

METHOD:: renderMethod
Get or set the rendering method which can be either 'direct' or 'vbap'.

note::
When in 'vbap' mode while creating an ImmUScore VBAP panner chains are automatically added to the score (they are hidden) with a duration equal to end time of the last event. If after creating the score by changing or adding events you make the score longer then the panner events will stop at the original end time of the score. In order to fix this, save the score to disk and open it again.
::

METHOD:: renderOptions
Get or set the render options. If renderMethod is set to  'vbap' this variable is ignored. If it set to 'direct' it should contain a dictionary
code::
 (\spkIndxs: [index_0,...,index_n] )
::
where index_i are Integers corresponding to the index of the output bus that each point of the surface should be sent to. The size of the array should be the same as the size of 'points'.

METHOD:: du
size of range in u direction

returns:: SimpleNumber


METHOD:: dv
size of range in v direction

returns:: SimpleNumber

METHOD:: size
number of points

returns:: SimpleNumber

METHOD:: ucenter
center of u range

returns:: SimpleNumber

METHOD:: vcenter
center of v range

returns:: SimpleNumber

METHOD:: plot
Plot the surface using Plotter3D


EXAMPLES::

code::
PGeodesicSphere(1).plot

PSphere(10).plot

PPlane(RealVector3D[-1.0,-1.0,1.0], RealVector3D[2.0,0.0,0.0], RealVector3D[0.0,2.0,0.0] ,10,10).plot
::